<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    注册bean-->
    <bean id="userService" class="com.zhaomeng.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.zhaomeng.log.BeforeLog"/>
    <bean id="afterLog" class="com.zhaomeng.log.AfterLog"/>
<!--    方式一：使用原生Spring API接口-->
<!--    配置aop，需要导入aop的约束-->
    <aop:config>
<!--        pointcut id：切点的名称-->
<!--        expression：要执行的位置，用表达式形式-->
        <aop:pointcut id="pointcut" expression="execution(* com.zhaomeng.service.UserServiceImpl.*(..))"/>
<!--        执行环绕-->
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>

    </aop:config>


<!--   方式二：自定义类-->
    <bean id="diy" class="com.zhaomeng.diy.DiyPointCut"/>
    <aop:config>
<!--        自定义切面，ref要引用的bean，表示要把diy这个beanid所对应的class中的方法切到其他地方去-->
        <aop:aspect ref="diy">
<!--            切入点 id为切入点的名称，后面的execution表示要对哪个类的什么方法进行切的操作-->
            <aop:pointcut id="point" expression="execution(* com.zhaomeng.service.UserServiceImpl.*(..))"/>
<!--            通知，在上面定义的pointcut中定义行为，before行为表示要在方法开始前执行什么方法，并且引用一个pointcut-->
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>
</beans>